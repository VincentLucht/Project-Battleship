@font-face {
  font-family: Metadannye;
  src: url('../fonts/Metadannye.ttf')
}

:root {
  --min-size-ship-placer: 404px;
  --turquoise: rgb(96, 181, 209);
  --darker-turquoise: rgb(42, 154, 191);
  --button-color: #F0F0F0;
  --light-green: rgb(7, 166, 7)
}

* {
  font-family: Metadannye;
}

body {
  margin: 0;
  padding: 0;

  display: grid;
  grid-template-rows: 10% 85% 5%;
  height: 100vh;

  background-color: rgb(57, 55, 55);
  color: white;
}

.unselectable {
  -webkit-user-select: none;  /* Safari */
  -moz-user-select: none;    /* Firefox */
  -ms-user-select: none;     /* Internet Explorer/Edge */
  user-select: none;         /* non-prefixed version, Chrome, Edge, Opera and Firefox */
}

header {
  font-size: clamp(90px, 5.5vw, 300px);

  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #161a1e;
}

main {
  display: grid;
  grid-template-rows: 0.2fr 0.8fr;
  gap: 5%;
  background-color: #1e2428;
}

/* turn board */
.turnBoardWrapper {
  display: grid;
  justify-content: center;
  align-items: last baseline;
}

.turnBoard {
  display: grid;
  place-content: center;

  border: 2px solid white;
  width: clamp(100px, 25vw, 600px);
  height: clamp(75px, 5vw, 150px);
  font-size: clamp(14px, 2vw, 50px);
}

/* ship placer */
.placeShips {
  border: 2px solid var(--turquoise);
  display: grid;
  grid-template-rows: repeat(4, 1fr);
  grid-auto-flow: column;

  width: 30vw;
  height: 30vw;

  min-width: 404px;
  min-height: 361px;
}
.placeShips>div {
  display: flex;
  justify-content: center;
  align-items: center;

  font-size: clamp(36px, 3vw, 60px);
}

.ship {
  cursor: grab;
  overflow: visible;
  transition: transform 0.2s ease-in-out;
}
.ship:hover {
  transform: scale(1.2);
}

div {
  overflow: visible;
}

/* fields */
.fieldWrapper {
  display: grid;
  grid-auto-flow: column;
  justify-content: space-around;
  align-items: start;
}

.field1, .field2 {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(10, 1fr);

  width: 30vw;
  height: 30vw;


  min-width: 400px;
  min-height: 400px;
}

.field1>div, .field2>div {
  border-style: solid;
  border-width: 2px;
  border-color: #002B66;

  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #2489DA;
  
  aspect-ratio: 1/1;
  min-width: 36px;
  min-height: 36px;
} 
.field1>div>div, .field2>div>div {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}
@media (min-width: 1400px) {
  .field1>div, .field2>div {
    border-width: 3px 2px;
  }
}
@media (min-width: 2000px) {
  .field1>div, .field2>div {
    border-width: 4px 2px;
  }
}

.hover:hover {
  background-color: purple;
  cursor: crosshair;
}

.atTurn {
  opacity: 1;
}

.notAtTurn {
  opacity: 0.5;
}


footer {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #161a1e;
}

.footerWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;

  font-size: 16px;
  font-family: 'Roboto', sans-serif;
}

.footerWrapper>p {
  font-family: 'Roboto', sans-serif;
}

#top {
  font-family: 'Roboto', sans-serif;
}
#top:hover {
  text-decoration: underline;
  color: #e8b464;
}

#github {
  cursor: pointer;
  width: 30px;
  transition: transform 0.3s ease;
}

#github:hover {
  transform: scale(1.2);
}

a:visited {
  color: white;
}

@keyframes color-change-green {
  0% {
    color: white;
    border-color: white;
  }
  50% {
    color: var(--light-green);
    border-color: var(--light-green);
  }
  100% {
    color: white;
    border-color: white;;
  }
}
.color-change-green {
  animation: color-change-green 1.5s infinite;
}

@keyframes color-change-red{
  0% {
    color: white;
    border-color: white;
  }
  50% {
    color: red;
    border-color: red;
  }
  100% {
    color: white;
    border-color: white;;
  }
}
.color-change-red {
  animation: color-change-red 1.5s infinite;
}

.hit-effect {
  transition: transform 0.2s ease-in-out, 
              background-color 0.2s ease-in-out; /* use ease-in-out for smooth transitions */
  transform: scale(1.3); /* increase size */
  background-color: red !important; /* change color to red */
}


/* BUTTONS */
.startGameWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
}

.startGame {
  width: clamp(100px, 10vw, 200px);
  height: clamp(40px, 4vw, 80px);
  font-size: clamp(20px, 2vw, 40px);

  border: 3px solid red;
  color: red;
  background-color: var(--button-color);
  transition: border 0.3s ease-in-out;
}
/* NOT ALLOWED TO START */
.startGameNoHover {
  cursor: not-allowed;
  transition: transform 0.3s ease-in-out, border 0.3s ease-in-out,
  color 0.3s ease-in-out, background-color 0.3s ease-in-out, text-decoration 0.3s ease;;
}
.startGameNoHover:hover {
  background-color: red;
  border: 3px solid white !important;
  color: white !important;
  transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1),
  border 0.3s ease-in-out, color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  transform: scale(0.9);
  text-decoration: line-through;
}

@keyframes shakeAnimation {
  0% { transform: translateX(0) rotate(0deg); }
  25% { transform: translateX(-5px) rotate(-5deg); }
  50% { transform: translateX(5px) rotate(5deg); }
  75% { transform: translateX(-5px) rotate(-5deg); }
  100% { transform: translateX(0) rotate(0deg); }
}
.startGameNoHover:active {
  animation: shakeAnimation 0.2s ease;
  animation-fill-mode: forwards;
  transition: transform 0.2s ease-in-out;
}

/* ALLOWED TO START */
.startGameHover {
  cursor: pointer;
  transition: transform 0.3s ease-in-out, border 0.3s ease-in-out, color 0.3s ease-in-out, 
  background-color 0.3s ease-in-out;
}
.startGameHover:hover {
  background-color: var(--light-green);
  border: 3px solid white !important;
  color: white !important;
  transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1), border 0.3s ease-in-out,
  color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  transform: scale(1.1);
}
.startGameHover:active {
  background-color: rgb(17, 123, 17);
  transition: background-color 0.1s ease-in; /* sped up for active class! */
}

.placementWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;

  width: 30vw;
  height: 30vw;

  min-width: 404px;
  min-height: 404px;

  -webkit-user-select: none;  /* Safari */
  -moz-user-select: none;    /* Firefox */
  -ms-user-select: none;     /* Internet Explorer/Edge */
  user-select: none;   
}

.buttonLocation {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  border: 2px solid var(--turquoise);
  width: 30vw;
  height: 3vw;

  min-width: var(--min-size-ship-placer);
  min-height: 35px;
}

.buttonLocation>button {
  background-color: var(--button-color);
  color: black;
  border: none;
  transition: background-color 0.3s ease, color 0.3s ease;

  font-size: clamp(20px, 1.5vw, 60px);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  cursor: pointer;
}
.buttonLocation>button:hover {
  background-color: var(--turquoise);
  color: white;
}
.buttonLocation>button:active {
  background-color: var(--darker-turquoise);
  transition: background-color 0.05s ease-in; /* speed up transition time for active p-class */
}
.resetButton {
  border-left: 2px solid var(--turquoise) !important;
  border-right: 2px solid var(--turquoise) !important;
}


/* "?" DROPDOWN */
.questionMark {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  width: 30vw;
  height: 2vw;

  min-width: var(--min-size-ship-placer);
}

.icon {
  display: flex;
  justify-content: center;
  align-items: center;
}

.help {
  display: flex;
  justify-content: center;
  align-items: center;

  cursor: pointer;
  border: 2px solid var(--turquoise);
  border-radius: 50%;
  width: 1.5vw;
  height: 1.5vw;
  font-size: 1.5vw;
  color: white;
  transition: background-color 0.3s ease;
  transition: transform 0.1s ease-in;
}
.help:hover {
  background-color: white;
  color: var(--turquoise);
}
.help:active {
  transform: scale(0.9);
}

.content {
  opacity: 0;
  pointer-events: none;
  position: absolute;
  background-color: var(--button-color);
  min-width: 5vw;
  color: black;
  box-shadow: 0px 0px 10px 3px rgba(0, 0 ,0 , 0.8);
  font-size: clamp(14px, 2vw, 28px);
}
.content>p {
  padding-left: 2vw;
  padding-right: 2vw;
}

@keyframes dropdown {
  from {
    transform: scale(0);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes dropdown-reverse {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0);
    opacity: 0;
  }
}
.visible, .hidden {
  margin-top: 10px;
  transform-origin: 5vw top;
}

.visible {
  opacity: 1;
  animation: dropdown 300ms ease-in-out;
  transform: scale(1);
}

.hidden {
  opacity: 0;
  animation: dropdown-reverse 300ms ease-in-out;
  transform: scale(0);
}


/* SHIPS */
#aircraftcarrier {
  background-image: url('./img/aircraftcarrier/iconACC.png');
  background-size: cover;
  width: clamp(36px, 2vw, 60px);
  height: clamp(36px, 2vw, 60px);
}
#battleship {
  background-image: url('./img/battleship/icon.png');
  background-size: cover;
  width: clamp(36px, 2vw, 60px);
  height: clamp(36px, 2vw, 60px);
}
#dreadnought {
  background-image: url('./img/dreadnought/iconDNG.png');
  background-size: cover;
  width: clamp(36px, 2vw, 60px);
  height: clamp(36px, 2vw, 60px);
}
#submarine {
  background-image: url('./img/submarine/iconSub.png');
  background-size: cover;
  width: clamp(36px, 2vw, 60px);
  height: clamp(36px, 2vw, 60px);
}
#cruiser {
  background-image: url('./img/cruiser/iconCRS.png');
  background-size: cover;
  width: clamp(36px, 2vw, 60px);
  height: clamp(36px, 2vw, 60px);
}
#destroyer {
  background-image: url('./img/destroyer/iconDes.png');
  background-size: cover;
  width: clamp(36px, 2vw, 60px);
  height: clamp(36px, 2vw, 60px);
}
#falcon {
  background-image: url('./img/falcon/iconFal.png');
  background-size: cover;
  width: clamp(36px, 2vw, 60px);
  height: clamp(36px, 2vw, 60px);
}

.restartButton {
  display: inline-block;
  padding: 10px 20px;
  width: clamp(100px, 10vw, 200px);
  height: clamp(40px, 4vw, 80px);
  font-size: clamp(20px, 2vw, 40px);
  border: 2px solid var(--turquoise, rgb(96, 181, 209));
  background-color: var(--button-color, #F0F0F0);
  color: black;
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s, transform 0.3s;
}

.restartButton:hover {
  background-color: var(--turquoise, rgb(96, 181, 209));
  color: #fff;
  transform: scale(1.1);
}